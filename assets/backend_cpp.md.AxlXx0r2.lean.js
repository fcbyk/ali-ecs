import{_ as t,c as l,a0 as a,o as e}from"./chunks/framework.DZWugerD.js";const g=JSON.parse('{"title":"C++","description":"","frontmatter":{},"headers":[],"relativePath":"backend/cpp.md","filePath":"backend/cpp.md"}'),r={name:"backend/cpp.md"};function i(o,s,n,c,u,d){return e(),l("div",null,s[0]||(s[0]=[a('<h1 id="c" tabindex="-1">C++ <a class="header-anchor" href="#c" aria-label="Permalink to &quot;C++&quot;">​</a></h1><h2 id="发展历史" tabindex="-1">发展历史 <a class="header-anchor" href="#发展历史" aria-label="Permalink to &quot;发展历史&quot;">​</a></h2><details class="details custom-block"><summary>1970s: 起源</summary><ul><li><strong>1972年</strong>：丹尼斯·里奇（Dennis Ritchie）在贝尔实验室开发了C语言，为C++奠定了基础。</li><li><strong>1979年</strong>：比亚尼·斯特劳斯特鲁普（Bjarne Stroustrup）开始在贝尔实验室开发“C with Classes”，这是C++的前身。</li></ul></details><details class="details custom-block"><summary>1980s: C++的诞生与初步发展</summary><ul><li><strong>1983年</strong>：正式将语言命名为C++，表示C的增强版本。加入了类（Class）、派生类（Derived Class）、强类型检查等功能。</li><li><strong>1985年</strong>：C++语言的第一本书《The C++ Programming Language》由比亚尼·斯特劳斯特鲁普出版。</li><li><strong>1985年</strong>：C++第一个商业编译器发布。</li><li><strong>1989年</strong>：C++ 2.0发布，引入了多重继承（Multiple Inheritance）、抽象类（Abstract Classes）和静态成员（Static Members）等功能。</li></ul></details><details class="details custom-block"><summary>1990s: 标准化与广泛采用</summary><ul><li><strong>1990年</strong>：C++ 2.1发布，新增模板（Templates）和异常处理（Exception Handling）。</li><li><strong>1998年</strong>：ISO/IEC标准化委员会发布了第一个C++标准：C++98（ISO/IEC 14882:1998）。 <ul><li>标准库（STL，Standard Template Library）成为C++的重要组成部分。</li></ul></li></ul></details><details class="details custom-block"><summary>2000s: 优化与改进</summary><ul><li><strong>2003年</strong>：发布C++03（ISO/IEC 14882:2003），主要是对C++98的错误修复和小幅改进。</li><li><strong>2000-2009年</strong>：Boost库的开发为现代C++的功能设计提供了大量灵感，例如智能指针（Smart Pointer）和元编程（Template Metaprogramming）。</li></ul></details><details class="details custom-block"><summary>2010s: 现代C++的崛起</summary><ul><li><strong>2011年</strong>：发布C++11（ISO/IEC 14882:2011），是一次重大升级： <ul><li>新特性包括：自动类型推导（auto）、范围for循环（range-based for loop）、lambda表达式、智能指针、右值引用（rvalue references）、线程支持（thread support）等。</li></ul></li><li><strong>2014年</strong>：发布C++14，改进C++11的一些细节，优化功能，例如泛型Lambda支持。</li><li><strong>2017年</strong>：发布C++17，引入了结构化绑定（Structured Bindings）、<code>std::optional</code>、<code>std::variant</code>和并行算法（Parallel Algorithms）等。</li></ul></details><details class="details custom-block"><summary>2020s: 现代化与性能优化</summary><ul><li><strong>2020年</strong>：发布C++20，这是继C++11之后的又一次大升级： <ul><li>新特性包括：模块（Modules）、协程（Coroutines）、范围（Ranges）、三路比较符（&lt;=&gt;，也称飞船操作符）、概念（Concepts）等。</li></ul></li><li><strong>2023年</strong>：C++23发布，重点是增强库功能和进一步简化语言特性，包括更优的多线程支持和更多库的改进。</li></ul></details>',8)]))}const C=t(r,[["render",i]]);export{g as __pageData,C as default};
